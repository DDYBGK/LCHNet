pointnet2_sem_seg文件夹中存放了pth、模型类等必要文件。
util则存放了数据预处理的函数，可以帮助理解数据处理流程，为之后的操作提供基础。
Build_Entry.py对模型进行了加载需要参照test_semseg.py进行修改。
UI.py搭建了可视化界面的框架以及对应的按钮操作。

说明：
1.在训练模型过程中，每个样本房间有一个总体的.txt文件，之后还有一个文件夹中存放了该房间各个局部的点云.txt文件这些数据都是有6列，
这个.txt文件包含了n行，代表n个点，6列为x、y、z、r、g、b，分别代表点的坐标、颜色。训练开始前交由collect_indoor3d_data.py
和indoor3d_util.py处理后会生成一个.npy文件，这个文件中是带有标签的点云数据，此时的特征通道数由6变为了9，最终模型需要输入[B,
9, 2048]形状的张量（可能是2048也可能是4096记不大清楚了，输入的.txt文件n远大于4096，因此还需要利用上述的collect_indoor3d
_data.py和indoor3d_util.py），B代表batch_size。模型输出则是一个[B,N,13](B代表batch_size，N代表点云点数，13代表类别数)
的张量。代表B个房间每个房间中N个点在13个类别上的概率。

2.那么该可视化界面部署时，输入的.txt文件是一个房间总体的布局，其含有多个点的信息点数远大于4096，因此需要对其进行预处理使其可以
输入到网络中进行处理，可以参考collect_indoor3d_data.py和indoor3d_util.py。之后进行预测将预测结果和原来的点的坐标进行对应，
生成一个新的.txt文件，这个文件中包含了每个点的位置、类别信息。

3.UI.py中有几个按钮，分别是：
- 选择文件：选择待处理的.txt文件。
- 执行处理按钮：对选中的文件进行处理，生成新的带有标签的.txt文件,之后按照标签不同设置不同的颜色进行点云可视化。（比如：椅子类别
设置为绿色，桌子类别设为红色）
- 清除按钮：清除之前显示框中的图像。

4.UI.py中有两个显示界面，分别是：
- 原始点云：显示原始的点云。
- 处理后的点云：显示处理后的点云，按照标签不同设置不同的颜色进行点云可视化。